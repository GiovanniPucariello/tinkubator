1.1 Load up an XmppFarm: linked.process.1@xmpp.linkedprocess.org/LoPFarm/XYF2QK47

    Farm starting -- SENT:

    <presence id="DU6gk-0">
      <status>LoP Farm v0.1 - starting</status>
      <priority>127</priority>
    </presence>

    VMScheduler started -- SENT:

    <presence id="DU6gk-1">
      <status>LoP Farm v0.1 - active</status>
      <priority>127</priority>
    </presence>

1.2 Shutdown the XmppFarm

    VMScheduler stopped -- SENT:

    <presence id="95LrE-2" type="unavailable">
      <status>LoP Farm v0.1 - terminating</status>
      <priority>127</priority>
      <show>dnd</show>
    </presence>

    XmppFarm stopped -- SENT:

    <presence id="95LrE-3" type="unavailable"></presence>


2. Load up SmackPlay: linked.process.2@xmpp.linkedprocess.org/P9YR0JMR

3. Send from SmackPlay-to-XmppFarm (Subscribe to the LoP Farm and add it to your buddy list)

    <presence to="linked.process.1@xmpp.linkedprocess.org/LoPFarm/XYF2QK47" type="subscribe" />

    RETURNED

	the subscription is accepted
    <presence to="linked.process.1@xmpp.linkedprocess.org/LoPFarm/P9YR0JMR" from="linked.process.1@xmpp.linkedprocess.org/LoPFarm/XYF2QK47" type="subscribed" />

    request to subscribe in the the clients roster
    <presence to="linked.process.1@xmpp.linkedprocess.org/LoPFarm/P9YR0JMR" from="linked.process.1@xmpp.linkedprocess.org/LoPFarm/XYF2QK47" type="subscribe" />

    the Farms status to the client:
    <presence id="HHWQ7-2" to="mockClient"><status>LoP Farm v0.1</status><priority>127</priority></presence>

4. Send from SmackPlay-to-XmppFarm (Spawn an LoP virtual machine from the LoP Farm)

    <iq type="get" to="linked.process.1@xmpp.linkedprocess.org/LoPFarm/XYF2QK47" id="T4tFi-X">
      <spawn_vm xmlns="http://linkedprocess.org/protocol#LoPFarm" vm_species="JavaScript" />
    </iq>

    RETURNED

    <iq id="T4tFi-X" to="linked.process.2@xmpp.linkedprocess.org/P9YR0JMR" type="result" from="linked.process.1@xmpp.linkedprocess.org/LoPFarm/XYF2QK47">
      <spawn_vm xmlns="http://linkedprocess.org/protocol#LoPFarm" vm_jid="linked.process.1@xmpp.linkedprocess.org/LoPVM/F0E4V2E6"/>
    </iq>

5. Send SmackPlay-to-XmppVirtualMachine (Evaluate an expression on the LoP virtual machine)

    <iq type="get" to="linked.process.1@xmpp.linkedprocess.org/LoPVM/YHC9ZGSK" id="bG23A-X">
      <evaluate xmlns="http://linkedprocess.org/protocol#LoPVM">
        20 + 52;
      </evaluate>
    </iq>

    RETURNED

    <iq id="bG23A-X" to="linked.process.2@xmpp.linkedprocess.org/P9YR0JMR" type="result" from="linked.process.1@xmpp.linkedprocess.org/LoPVM/F0E4V2E6">
      <evaluate xmlns="http://linkedprocess.org/protocol#LoPVM">
        72.0
      </evaluate>
    </iq>

6. Send from SmackPlay-to-XmppFarm (Terminate the LoP virtual machine)

    <iq type="get" to="linked.process.1@xmpp.linkedprocess.org/LoPFarm/XYF2QK47" id="T4tFi-X">
      <terminate_vm xmlns="http://linkedprocess.org/protocol#LoPFarm" vm_jid="linked.process.1@xmpp.linkedprocess.org/LoPVM/F0E4V2E6" />
    </iq>

    RETURNED

    <iq id="T4tFi-X" to="linked.process.2@xmpp.linkedprocess.org/P9YR0JMR" type="get" from="linked.process.1@xmpp.linkedprocess.org/LoPFarm/XYF2QK47">
      <terminate_vm xmlns="http://linkedprocess.org/protocol#LoPFarm"/>
    </iq>


7. Send from SmackPlay-to-XmppFarm (Unsubscribe from the LoP Farm and remove it from your buddy list)

    <presence to="linked.process.1@xmpp.linkedprocess.org/LoPFarm/XYF2QK47" type="unsubscribe" />

    RETURNED

    <presence to="linked.process.1@xmpp.linkedprocess.org/LoPFarm/P9YR0JMR" from="linked.process.1@xmpp.linkedprocess.org/LoPFarm/XYF2QK47" type="unsubscribed" />
    <presence to="linked.process.1@xmpp.linkedprocess.org/LoPFarm/P9YR0JMR" from="linked.process.1@xmpp.linkedprocess.org/LoPFarm/XYF2QK47" type="unsubscribe" />
