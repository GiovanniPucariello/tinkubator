With Linked Process, any computing device with an Internet connection can contribute their computational resources to the general public for general-purpose computing. Linked Process provides the mechanisms for discovering available devices, for distributing jobs to devices, and for ensuring that such jobs do not corrupt the integrity of their respective executing device. Atop this functionality, applications can make use of Linked Process, knowing that the existing Linked Process cloud will be able to fulfill their computing resource needs.

There are various computing scenarios in which Linked Process can be effectively applied. Below is a collection of such use case scenarios. Note that many of these use cases overlap in their functionality. Moreover, some use cases point to more general models of computing while others point to more specific applications.

* *Distributed data processing*: if a computation requires the use of an excessive amount of remote data, then it may be more efficient to migrate code to the location of the data, than to migrate data to the location of the code. In other words, it may be more efficient to move the process to the data, not the data to the process. ["more information":http://en.wikipedia.org/wiki/Locality_of_reference]
* *Parallel algorithm execution*: if an algorithm can be parallelized, the it is possible to execute that algorithm on multiple physical machines concurrently. The amount of parallelization determines the speedup with respect to its serial execution. Moreover, with access to an excessive number of processors, “forced parallel” models of serial algorithms, such as speculative computing models, can be implemented. ["more information":http://en.wikipedia.org/wiki/Amdahl's_law]
* *Computational complexity on a mobile device*: mobile devices such as cell phones have limited processor speeds. By leveraging a more powerful device elsewhere on the Internet for processing, it is possible to increase the complexity of the applications that can be provided by mobile devices.
* *Access to specialized resources*: heterogeneous computing devices maintain heterogenous resources. For example: a cell phone may have a particular geo-location and a camera, a server may have a large-scale data set, a desktop computer may have a specialized FPGA hardware device, etc. The ability for anyone to easily access and compute with such resources can expand the types of applications that can be developed. ["more information":http://markorodriguez.com/Lectures_files/ignite-rodriguez2009.pdf]
* *Support for computationally intensive applications*: data analysis and 3D graphics rendering software are examples of applications that tend to support the clustering of multiple computing devices to speed up the execution of their algorithms. With Linked Process, the protocol specifics of this “clustering” are taken care of and moreover, there already exists devices that can be leveraged beyond the devices owned and operated by the executor of such applications.