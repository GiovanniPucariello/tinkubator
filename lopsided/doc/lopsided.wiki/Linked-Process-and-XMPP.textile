Linked Process rides atop of "XMPP":http://xmpp.org for these reasons:

# *XMPP provides presence and roster mechanisms necessary for dynamic compute clouds.*
  ** As farms come online and offline, there presence is made available to other machines automatically.
  ** As farms become overloaded, their status is updated to denote that they are currently unavailable.
  ** XMPP allows for the publication of "features" through @disco#info@ which is great for advertising available computing resources.
# *XMPP is a real-time, asynchronous, bi-directional, push-based communication protocol.*
  ** More popular protocols like HTTP are pull-based an thus, polling for results is required.
  ** Linked Process jobs can execute for an indefinite amount of time, thus a push-based mechanism is desirable.
# *XMPP has an existing infrastructure of servers/technology in place due to the popularity of XMPP chat.*
  ** Linked Process works over popular services like GTalk and Jabber.
  ** There are many implemented XMPP servers so its easy for anyone to throw up an XMPP server and run a local (organizationally-bound) Linked Process cluster.
  ** There are many XMPP APIs, thus developers can create different implementations of the Linked Process protocol with relative ease and without being bound to a particular codebase.

In order to better understand Linked Process, its important to understand how XMPP works.

!https://github.com/tinkerpop/lopsided/raw/master/doc/images/lop-xmpp-communication.png!

!https://github.com/tinkerpop/lopsided/raw/master/doc/images/lop-sequence.png!